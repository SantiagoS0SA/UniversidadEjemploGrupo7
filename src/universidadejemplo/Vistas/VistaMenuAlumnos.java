/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package universidadejemplo.Vistas;

import java.awt.Color;
import java.time.Instant;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import javax.swing.JOptionPane;
import universidadejemplo.AccesoaDatos.AlumnoData;
import universidadejemplo.Entidades.Alumno;

/**
 *
 * @author Pc
 */
public class VistaMenuAlumnos extends javax.swing.JInternalFrame {
    private Alumno alumno = null;
    private AlumnoData alu = new AlumnoData();
    /**
     * Creates new form VistaMenuAlumnos
     */
    public VistaMenuAlumnos() {
        initComponents();
        jActualizar.setEnabled(false);
        jEliminar.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jAgregar = new javax.swing.JButton();
        jEliminar = new javax.swing.JButton();
        jActualizar = new javax.swing.JButton();
        jSalir = new javax.swing.JButton();
        jBuscar = new javax.swing.JButton();
        jDni = new javax.swing.JTextField();
        jApellido = new javax.swing.JTextField();
        jNombre = new javax.swing.JTextField();
        jBoolean = new javax.swing.JRadioButton();
        jDateN = new com.toedter.calendar.JDateChooser();
        jError = new javax.swing.JLabel();
        jAnuncio = new javax.swing.JLabel();

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        setBackground(new java.awt.Color(0, 102, 0));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel1.setText("Alumno");

        jLabel2.setText("Documento:");

        jLabel3.setText("Apellido:");

        jLabel4.setText("Nombre:");

        jLabel5.setText("Estado:");

        jLabel6.setText("Fecha de Nacimiento:");

        jAgregar.setText("Agregar");
        jAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAgregarActionPerformed(evt);
            }
        });

        jEliminar.setText("Eliminar");
        jEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEliminarActionPerformed(evt);
            }
        });

        jActualizar.setText("Actualizar");
        jActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jActualizarActionPerformed(evt);
            }
        });

        jSalir.setText("Salir");
        jSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSalirActionPerformed(evt);
            }
        });

        jBuscar.setText("Buscar");
        jBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBuscarActionPerformed(evt);
            }
        });

        jDni.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jDniMouseClicked(evt);
            }
        });
        jDni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDniActionPerformed(evt);
            }
        });

        jError.setText("Error : ");

        jAnuncio.setText("Deseas buscar un alumno ? Ingresa su dni");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(175, 175, 175)
                                .addComponent(jLabel1)
                                .addContainerGap(224, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jError)
                                    .addComponent(jApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jBoolean)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jDni, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jBuscar))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(jAnuncio)))
                                .addGap(83, 83, 83))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jDateN, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(jAgregar)
                                .addGap(18, 18, 18)
                                .addComponent(jEliminar)
                                .addGap(18, 18, 18)
                                .addComponent(jActualizar)
                                .addGap(18, 18, 18)
                                .addComponent(jSalir)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addComponent(jAnuncio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jError)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jBoolean)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6))
                    .addComponent(jDateN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEliminar)
                    .addComponent(jAgregar)
                    .addComponent(jActualizar)
                    .addComponent(jSalir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAgregarActionPerformed
        // TODO add your handling code here:
        try {
            int dni = Integer.parseInt(jDni.getText());
            String apellido = jApellido.getText();
            String nombre = jNombre.getText();
            boolean boton = jBoolean.isSelected();
            LocalDate fechaN = jDateN.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            
            //System.out.println("datos obtenidos");
            
            if(alu.ValidacionDni(dni)){
                jError.setForeground(Color.RED);
                jError.setText("044: Numero de Dni ya registrado");
                
                jNombre.setText("");
                jApellido.setText("");
                jDateN.setDate(null);
                jDni.setText("");
               
            }else{
                //System.out.println("creando al alumno Agregado ");
                
               Alumno gurdarAlumno = new Alumno(); 
               
             gurdarAlumno.setDni(dni);
            gurdarAlumno.setApellido(apellido);
            gurdarAlumno.setNombre(nombre);
            gurdarAlumno.setFechaNac(fechaN);
            gurdarAlumno.setActivo(boton);
            
            alu.guardarAlumno(gurdarAlumno);
            
            jError.setForeground(Color.GREEN);
            jError.setText("No se encontro errores");
            
            
                jNombre.setText("");
                jApellido.setText("");
                jDateN.setDate(null);
                jDni.setText("");
     
            } 
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Numero de Dni ya usado, por favor chequear el dni ingresado");
            
             
        } catch(NullPointerException e ){
            JOptionPane.showMessageDialog(null, "Complete los campos vacios. Por Favor " + e.getLocalizedMessage());
            
        }
      
        
       
    }//GEN-LAST:event_jAgregarActionPerformed

    private void jDniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDniActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jDniActionPerformed

    private void jSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSalirActionPerformed
        
        dispose();
    }//GEN-LAST:event_jSalirActionPerformed

    private void jBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBuscarActionPerformed
        // TODO add your handling code here:
       try{
           int dni = Integer.parseInt(jDni.getText());
           Alumno alumn = alu.buscarAlumnoDni(dni);
            
           if(alumn != null){
           
               jDni.setText(String.valueOf(alumn.getDni()));
               jApellido.setText(alumn.getApellido());
               jNombre.setText(alumn.getNombre());
               
               LocalDate fch = alumn.getFechaNac();
               Date fc = Date.from(fch.atStartOfDay(ZoneId.systemDefault()).toInstant());
               
               jDateN.setDate(fc);
               
               jBoolean.setSelected(alumn.isActivo());
               
               jActualizar.setEnabled(true);
               jEliminar.setEnabled(true);
               jAgregar.setEnabled(false);
               jError.setForeground(null);
               jError.setText("Error:");
           }else{
               JOptionPane.showMessageDialog(null, "Alumno no encontrado");
               
                jDni.setText("");
                jNombre.setText("");
                jApellido.setText("");
                jDateN.setDate(null);
                jBoolean.setSelected(false);
                
                
           }
       }catch(NumberFormatException e){
           JOptionPane.showMessageDialog(null, "id no encontrado");
       }
      
    }//GEN-LAST:event_jBuscarActionPerformed

    private void jActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jActualizarActionPerformed
        // TODO add your handling code he

           try {
        if (jActualizar.isEnabled()) {
            String dniText = jDni.getText().trim();
            String apellido = jApellido.getText();
            String nombre = jNombre.getText();
            Date fch= jDateN.getDate();
            boolean boton = jBoolean.isSelected();
            
            
            //  código de validación...
            if(dniText.isEmpty() || !dniText.matches("\\d+")){
                JOptionPane.showMessageDialog(null, "verifique la casilla del Dni");
            }
            
            
            Instant intal = fch.toInstant();
            LocalDate fc = intal.atZone(ZoneId.systemDefault()).toLocalDate();
            
           
            int dni = Integer.parseInt(dniText);
            // Crear un nuevo objeto Alumno con los datos actualizados
            Alumno alumnoActualizado = new Alumno();
             
            alumnoActualizado.setDni(dni);
            alumnoActualizado.setApellido(apellido);
            alumnoActualizado.setNombre(nombre);
            alumnoActualizado.setFechaNac(fc);
            alumnoActualizado.setActivo(boton);

            // Llamar al método para modificar el alumno
            alu.modificarAlumno(alumnoActualizado);

            JOptionPane.showMessageDialog(null, "Alumno modificado exitosamente.");

            // Limpiar los campos después de la actualización
            jNombre.setText("");
            jApellido.setText("");
            jDateN.setDate(null);
            jDni.setText("");
            jAgregar.setEnabled(true);
            
        } else {
            JOptionPane.showMessageDialog(null, "No se pudo actualizar. Debe buscar un ID antes de actualizar.");
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Número de DNI no válido. Por favor, verifique el DNI ingresado.");
    } catch (NullPointerException e) {
        JOptionPane.showMessageDialog(null, "Por favor, complete todos los campos.");
        jAgregar.setEnabled(true);
    }
        
    }//GEN-LAST:event_jActualizarActionPerformed

    private void jEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEliminarActionPerformed
        // TODO add your handling code here:
        try{
        
            int dni = Integer.parseInt(jDni.getText());
            
            Alumno eliminarAlumno = alu.buscarAlumnoDni(dni);
            
            if(eliminarAlumno != null){
                
                int confirmacion = JOptionPane.showConfirmDialog(null, "¿Estas seguro de que deseas eliminar a : "+eliminarAlumno.getApellido()
                + " "+eliminarAlumno.getNombre()+ "?",
                        "Confirmar Eliminacion",
                        JOptionPane.YES_NO_OPTION
                        );
                
                if(confirmacion == JOptionPane.YES_OPTION){
                    alu.eliminarAlumno(dni);
                    jDni.setText("");
                    jApellido.setText("");
                    jNombre.setText("");
                    jDateN.setDate(null);
                    jBoolean.setSelected(false);
                    jAgregar.setEnabled(true);
                   
                }else{
                    JOptionPane.showMessageDialog(null, "se Cancelo la operacion");
                }
            
            }
        
        }catch(NumberFormatException e ){
            JOptionPane.showMessageDialog(null, "Id de alumno no valido");
        }
    }//GEN-LAST:event_jEliminarActionPerformed

    private void jDniMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jDniMouseClicked
        // TODO add your handling code here:
        jActualizar.setEnabled(false);
        jEliminar.setEnabled(false);
        jAgregar.setEnabled(true);
        
        jError.setForeground(null);
        jError.setText("Error:");
        
    }//GEN-LAST:event_jDniMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jActualizar;
    private javax.swing.JButton jAgregar;
    private javax.swing.JLabel jAnuncio;
    private javax.swing.JTextField jApellido;
    private javax.swing.JRadioButton jBoolean;
    private javax.swing.JButton jBuscar;
    private com.toedter.calendar.JDateChooser jDateN;
    private javax.swing.JTextField jDni;
    private javax.swing.JButton jEliminar;
    private javax.swing.JLabel jError;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jNombre;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JButton jSalir;
    // End of variables declaration//GEN-END:variables
}
